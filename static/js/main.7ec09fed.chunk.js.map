{"version":3,"sources":["registerServiceWorker.js","store/actions/actionTypes.js","shared/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","components/NavBar/NavBar.js","hoc/Layout/Layout.js","hoc/Aux/Aux.js","assets/images/salad.svg","assets/images/tomato.svg","assets/images/cheese.svg","assets/images/meat.svg","assets/images/bacon.svg","assets/images/bread-bottom.svg","assets/images/bread-top.svg","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hooks/http-error-handler.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","initialState","ingredients","totalPrice","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","tomato","addIngredient","action","updatedIngredient","ingredientName","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","type","actionTypes","orders","loading","purchased","purchaseInit","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","token","userId","authRedirectPath","authStart","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","NavBar","isAuthenticated","useSelector","auth","useState","menuOpen","setMenuOpen","className","to","exact","href","onClick","e","preventDefault","activeClassName","Layout","props","children","aux","burgerIngredient","ingredient","src","BreadBottom","alt","BreadTop","MeatSvg","CheeseSvg","BaconSvg","TomatoSvg","SaladSvg","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","buildControl","label","num","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","isAuth","Backdrop","show","clicked","Modal","Aux","modalClosed","style","transform","opacity","React","memo","prevProps","nextProps","button","btnType","join","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","HttpErrorTemp","httpClient","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","useEffect","eject","withErrorHandler","WrappedComponent","axios","useHttpErrorHandler","clearError","message","instance","create","baseURL","process","initIngredients","dispatch","get","data","purchaseBurger","post","name","fetchOrders","queryParams","fetchedOrders","forEach","key","push","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","purchasing","setPurchasing","useDispatch","ings","burgerBuilder","onInitIngredients","useCallback","actions","onInitPurchase","purchaseCancelHandler","disabledInfo","ingName","sum","history","OrderSummary","connect","onLogout","CheckoutSummary","routerMatch","setRouterMatch","pathname","includes","width","margin","checkoutCancelled","checkoutContinued","input","Invalid","inputElement","invalid","shouldValidate","touched","elementType","elementConfig","onChange","changed","errorMsg","options","option","displayValue","htmlFor","placeholder","validation","valid","country","street","zipCode","deliveryMethod","orderForm","setOrderForm","formIsValid","setFormIsValid","order","formElementsArray","config","form","onSubmit","event","formData","formElementIdentifier","onOrderBurger","date","formElement","inputIdentifier","updatedFormElement","target","updatedOrderForm","inputChangedHandler","summary","purchasedRedirect","goBack","replace","component","ContactData","amount","ingredientOutput","ig","display","border","padding","borderRadius","time","datetime","setTime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","convertTime","Number","parseFloat","onFetchOrders","ordersComponent","class","Auth","setIsSignup","authForm","setAuthForm","buildingBurger","dispatchOnSetAuthRedirectPath","controlName","updatedControls","errorMessage","background","authRedirect","dispatchOnAuth","App","getItem","routes","BurgerBuilder","Checkout","Orders","Logout","fallback","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7ec09fed.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = ( value, rules ) => {\n    let isValid = true;\n    if ( !rules ) {\n        return true;\n    }\n\n    if ( rules.required ) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if ( rules.minLength ) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if ( rules.maxLength ) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if ( rules.isEmail ) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    if ( rules.isNumeric ) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    return isValid;\n}\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7,\n    tomato: 0.4\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat,\n            tomato: action.ingredients.tomato,\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    return updateObject(state, { authRedirectPath: action.path })\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport './NavBar.css';\n\nconst NavBar = () => {\n\tconst isAuthenticated = useSelector(state => state.auth.token !== null);\n\tconst [menuOpen, setMenuOpen] = useState(false);\n\t\n\tfunction toggleMenu (e) {\n\t\te.preventDefault();\n\t\tsetMenuOpen(!menuOpen)\n\t}\n\treturn (\n\t\t<header className={'navbar'}>\n\t\t\t<NavLink to=\"/\" exact className=\"nav-logo\"><i className=\"fas fa-hamburger\"></i></NavLink>\n\t\t\t<a href=\"/\" className=\"nav-logo mobile-menu-btn\" onClick={toggleMenu}><i className=\"fas fa-bars\"></i></a>\n\n\t\t\t<nav className={menuOpen? 'open nav-item' : 'nav-item'}>\n\t\t\t\t<NavLink to=\"/\" exact>Burger Builder</NavLink>\n\t\t\t\t{isAuthenticated ? <NavLink to=\"/orders\" activeClassName={'active'}>Orders</NavLink> : null }\n\t\t\t\t{!isAuthenticated\n\t\t\t\t\t? <NavLink to=\"/auth\" activeClassName={'active'}>Authenticate</NavLink>\n\t\t\t\t\t: <NavLink to=\"/logout\" activeClassName={'active'}>Logout</NavLink>}\n\t\t\t</nav>\n\t\t</header>\n\t)\n};\n\nexport default NavBar;","import React from 'react';\n\nimport './Layout.css';\nimport NavBar from '../../components/NavBar/NavBar';\n\nconst Layout = props => {\n  return (\n    <div>\n      <NavBar />\n      <main className={'main'}>{props.children}</main>\n    </div>\n  );\n};\n\nexport default Layout;\n","const aux = (props) => props.children;\n\nexport default aux;","export default __webpack_public_path__ + \"static/media/salad.4779368a.svg\";","export default __webpack_public_path__ + \"static/media/tomato.fe212b00.svg\";","export default __webpack_public_path__ + \"static/media/cheese.c5533f59.svg\";","export default __webpack_public_path__ + \"static/media/meat.a90b51b3.svg\";","export default __webpack_public_path__ + \"static/media/bacon.57bb6384.svg\";","export default __webpack_public_path__ + \"static/media/bread-bottom.61838c30.svg\";","export default __webpack_public_path__ + \"static/media/bread-top.3a881882.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SaladSvg from './../../../assets/images/salad.svg';\nimport TomatoSvg from './../../../assets/images/tomato.svg';\nimport CheeseSvg from './../../../assets/images/cheese.svg';\nimport MeatSvg from './../../../assets/images/meat.svg';\nimport BaconSvg from './../../../assets/images/bacon.svg';\nimport BreadBottom from './../../../assets/images/bread-bottom.svg';\nimport BreadTop from './../../../assets/images/bread-top.svg';\nimport './BurgerIngredient.css';\n\nconst burgerIngredient = props => {\n  let ingredient = null;\n\n  switch (props.type) {\n    case 'bread-bottom':\n      ingredient = <div className={'each-ingredient each-ingredient-bread-bottom'}>\n      <img src={BreadBottom} alt=\"bread-bottom\" />\n    </div>;\n      break;\n    case 'bread-top':\n      ingredient = <div className={'each-ingredient each-ingredient-bread-top'}>\n      <img src={BreadTop} alt=\"bread-top\" />\n    </div>;\n      break;\n    case 'meat':\n      ingredient = <div className={'each-ingredient each-ingredient-meat'}>\n      <img src={MeatSvg} alt=\"meat\" />\n    </div>;\n      break;\n    case 'cheese':\n      ingredient =  <div className={'each-ingredient each-ingredient-cheese'}>\n        <img src={CheeseSvg} alt=\"salad\" />\n      </div>;\n      break;\n    case 'bacon':\n      ingredient = <div className={'each-ingredient each-ingredient-bacon'}>\n      <img src={BaconSvg} alt=\"bacon\" />\n    </div>;\n      break;\n    case 'tomato':\n      ingredient = <div className={'each-ingredient each-ingredient-tomato'}>\n      <img src={TomatoSvg} alt=\"tomato\" />\n    </div>;\n      break;\n    case 'salad':\n      ingredient = <div className={'each-ingredient each-ingredient-salad'}>\n        <img src={SaladSvg} alt=\"salad\" />\n      </div>;\n      break;\n    default:\n      ingredient = null;\n  }\n\n  return ingredient;\n};\n\nburgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default burgerIngredient;\n","import React from 'react';\n\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={'Burger'}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n\t<div className={'BuildControl'}>\n\t\t<div className={'Label'}>{props.label} * {props.num}</div>\n\t\t<div className=\"button-group\">\n\t\t\t<button\n\t\t\t\tclassName={'Less'}\n\t\t\t\tonClick={props.removed}\n\t\t\t\tdisabled={props.disabled}>Less</button>\n\t\t\t<button\n\t\t\t\tclassName={'More'}\n\t\t\t\tonClick={props.added}>More</button>\n\t\t</div>\n\t</div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n  { label: 'Salad', type: 'salad' },\n  { label: 'Bacon', type: 'bacon' },\n  { label: 'Cheese', type: 'cheese' },\n  { label: 'Meat', type: 'meat' },\n  { label: 'Tomato', type: 'tomato' }\n];\n\nconst buildControls = (props) => (\n  <div className={'BuildControls'}>\n    <div className=\"content\">\n      <h2 className=\"title\"> Choose Your Ingredients</h2>\n      <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n      {controls.map(ctrl => (\n        <BuildControl\n          num={props.ingredients[ctrl.type]}\n          key={ctrl.label}\n          label={ctrl.label}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n          disabled={props.disabled[ctrl.type]} />\n      ))}\n      <button\n        className={'OrderButton'}\n        disabled={!props.purchasable}\n        onClick={props.ordered}>{props.isAuth ? 'Order Now' : 'Sigh Up To Order'}</button>\n    </div>\n  </div>\n);\n\nexport default buildControls;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst Backdrop = (props) => (\n    props.show ? <div className={'Backdrop'} onClick={props.clicked}></div> : null\n);\n\nexport default Backdrop;","import React from 'react';\n\nimport './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst Modal = props => {\n  // shouldComponentUpdate ( nextProps, nextState ) {\n  //     return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n  // }\n\n  return (\n    <Aux>\n      <Backdrop show={props.show} clicked={props.modalClosed} />\n      <div\n        className={'Modal'}\n        style={{\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0'\n        }}\n      >\n        {props.children}\n      </div>\n    </Aux>\n  );\n};\n\nexport default React.memo(\n  Modal,\n  (prevProps, nextProps) =>\n    nextProps.show === prevProps.show &&\n    nextProps.children === prevProps.children\n);\n","import React from 'react';\n\nimport './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={['Button', [props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = props => {\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:{' '}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n\n  return (\n    <Aux>\n      <h2>Your Order</h2>\n      <hr />\n      <p>A delicious burger with the following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\n      </p>\n      <hr />\n      <p>Continue to Checkout?</p>\n      <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\n        CONTINUE\n      </Button>\n    </Aux>\n  );\n};\n\nexport default orderSummary;\n","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className={'Loader'}>Loading...</div>\n);\n\nexport default spinner;","import { useState, useEffect } from 'react';\n\nconst HttpErrorTemp = httpClient => {\n  const [error, setError] = useState(null);\n\n  const reqInterceptor = httpClient.interceptors.request.use(req => {\n    setError(null);\n    return req;\n  });\n  const resInterceptor = httpClient.interceptors.response.use(\n    res => res,\n    err => {\n      setError(err);\n    }\n  );\n\n  useEffect(() => {\n    return () => {\n      httpClient.interceptors.request.eject(reqInterceptor);\n      httpClient.interceptors.response.eject(resInterceptor);\n    };\n  }, [reqInterceptor, resInterceptor]);\n\n  const errorConfirmedHandler = () => {\n    setError(null);\n  };\n\n  return [error, errorConfirmedHandler];\n}\nexport default HttpErrorTemp;","import React from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return props => {\n    const [error, clearError] = useHttpErrorHandler(axios);\n\n    return (\n      <Aux>\n        <Modal show={error} modalClosed={clearError}>\n          {error ? error.message : null}\n        </Modal>\n        <WrappedComponent {...props} />\n      </Aux>\n    );\n  };\n};\n\nexport default withErrorHandler;\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BASEURL\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = ( name ) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = ( name ) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = ( ingredients ) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get( process.env.REACT_APP_BASEURL + '/ingredients.json' )\n            .then( response => {\n               dispatch(setIngredients(response.data));\n            } )\n            .catch( error => {\n                dispatch(fetchIngredientsFailed());\n            } );\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseBurgerFail = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n}\n\nexport const purchaseBurgerStart = () => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios.post('/orders.json?auth=' + token, orderData)\n      .then(response => {\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = (error) => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.get('/orders.json' + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        Object.keys(res.data).forEach(key => {\n          fetchedOrders.push({\n            ...res.data[key],\n            orderId: key\n          });\n        })\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n        })\n        .catch(err => {\n          dispatch(fetchOrdersFail(err));\n        });\n      };\n  };","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + process.env.REACT_APP_IDENTITY_TOKEN;\n    if (!isSignup) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + process.env.REACT_APP_IDENTITY_TOKEN;\n    }\n    axios.post(url, authData)\n      .then(response => {\n        const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n        localStorage.setItem('token', response.data.idToken);\n        localStorage.setItem('expirationDate', expirationDate);\n        localStorage.setItem('userId', response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(err => {\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\n\n/**\n * {\n * email: \"a2@gmail.com\"\n  expiresIn: \"3600\"\n  idToken: \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjBlYmMyZmI5N2QyNWE1MmQ5MjJhOGRkNTRiZmQ4MzhhOTk4MjE2MmIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vdHp1aHVpLTEwYzFlIiwiYXVkIjoidHp1aHVpLTEwYzFlIiwiYXV0aF90aW1lIjoxNjE0MjY5MTI1LCJ1c2VyX2lkIjoiT3VzaHBhckdtTk5qN0FkMFU3eVE5U1J2OEhwMiIsInN1YiI6Ik91c2hwYXJHbU5OajdBZDBVN3lROVNSdjhIcDIiLCJpYXQiOjE2MTQyNjkxMjUsImV4cCI6MTYxNDI3MjcyNSwiZW1haWwiOiJhMkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsiYTJAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.ecolkkrt-qnLWfBRJBLPKa7A4t1VBOfSJevcWFCNXT-79oYpkdd3rGXujznuk_p5OCp0nsFnucA1yRiajHkL_APFlqy2lXCqyfndPiBOIp797dP1-WhjhvTr6MRSBcDNmoUKUg8IWkxg-Bd00VuMF7zCiSehkx7BNFDm1WPwdLpkw6ud1F__MOo8wIZttjjEAbwyGv2lToEBVRfv_QwrtjWKeg1fLdEaoF-w92XRkQmxIzLY0e1scUFNtESn-PAVkh2zTIpUREAJJIErgF20ecWA_DWVFQREdTBSdjYD021_xb91dEpZdIxNDsSB16uQe5emCbeU5M9vLwdapU9y_w\"\n  kind: \"identitytoolkit#SignupNewUserResponse\"\n  localId: \"OushparGmNNj7Ad0U7yQ9SRv8Hp2\"\n  refreshToken: \"AOvuKvTYbYDOJYG5J1jcqDy5Fx2fh88v6Fo3cU8wXHGpTtsvQ4Z6_R--BI9GLdqkFuOXIVWrnlTowWSeSruYPbbjRnCoetqOZI7Tl4IADQsMtehdHIo6iqspj-q863RKi1e355SpzHu-onP57hy4UMrIBUcbVbDET0P_oWuGq_D6uB2tDLikqZGBgI6flSz-syzF4FPTlj9l\"\n * }\n */","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nimport './BurgerBuilder.css'\n\nconst BurgerBuilder = props => {\n  const [purchasing, setPurchasing] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const ings = useSelector(state => {\n    return state.burgerBuilder.ingredients;\n  });\n  const price = useSelector(state => state.burgerBuilder.totalPrice);\n  const error = useSelector(state => state.burgerBuilder.error);\n  const isAuthenticated = useSelector(state => state.auth.token !== null);\n\n  const onIngredientAdded = ingName => dispatch(actions.addIngredient(ingName));\n  const onIngredientRemoved = ingName =>\n    dispatch(actions.removeIngredient(ingName));\n  const onInitIngredients = useCallback(\n    () => dispatch(actions.initIngredients()),\n    [dispatch]\n  );\n  const onInitPurchase = () => dispatch(actions.purchaseInit());\n  const onSetAuthRedirectPath = path =>\n    dispatch(actions.setAuthRedirectPath(path));\n\n  useEffect(() => {\n    onInitIngredients();\n  }, [onInitIngredients]);\n\n  const updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    return sum > 0;\n  };\n\n  const purchaseHandler = () => {\n    if (isAuthenticated) {\n      setPurchasing(true);\n    } else {\n      onSetAuthRedirectPath('/checkout');\n      props.history.push('/auth');\n    }\n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    onInitPurchase();\n    props.history.push('/checkout');\n  };\n\n  const disabledInfo = {\n    ...ings\n  };\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n  let orderSummary = null;\n  let burger = error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n  if (ings) {\n    burger = (\n      <div className=\"main-section\">\n        <Burger className=\"show-burger\" ingredients={ings} />\n        <BuildControls\n          ingredients={ings}\n          className=\"order-burger\"\n          ingredientAdded={onIngredientAdded}\n          ingredientRemoved={onIngredientRemoved}\n          disabled={disabledInfo}\n          purchasable={updatePurchaseState(ings)}\n          ordered={purchaseHandler}\n          isAuth={isAuthenticated}\n          price={price}\n        />\n      </div>\n    );\n    orderSummary = (\n      <OrderSummary\n        ingredients={ings}\n        price={price}\n        purchaseCancelled={purchaseCancelHandler}\n        purchaseContinued={purchaseContinueHandler}\n      />\n    );\n  }\n  // {salad: true, meat: false, ...}\n  return (\n    <Aux>\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n        {orderSummary}\n      </Modal>\n      {burger}\n    </Aux>\n  );\n};\n\nexport default withErrorHandler(BurgerBuilder, axios);\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nconst Logout = props => {\n  const { onLogout } = props;\n\n  useEffect(() => {\n    onLogout();\n  }, [onLogout]);\n\n  return <Redirect to=\"/\" />;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Logout);\n","import React, { useEffect, useState } from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst CheckoutSummary = (props) => {\n  const [routerMatch, setRouterMatch] = useState(false);\n  useEffect(() => {\n    if (window.location.pathname.includes('contact-data')) {\n      setRouterMatch(true)\n    }\n  }, [setRouterMatch])\n  return (\n    <div className={'CheckoutSummary'}>\n      <h1>We hope it tastes well!</h1>\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Burger ingredients={props.ingredients} />\n      </div>\n      <Button\n        btnType=\"Danger\"\n        clicked={props.checkoutCancelled}>CANCEL</Button>\n      {routerMatch ? null\n        : <Button\n          btnType=\"Success\"\n          clicked={props.checkoutContinued}>CONTINUE</Button>}\n    </div>\n  );\n}\n\nexport default CheckoutSummary;","import React from 'react';\n\nimport './Input.css';\n\nconst input = (props) => {\n  let inputElement = null;\n  let Invalid;\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    Invalid = 'Invalid'\n  }\n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <div><input\n        id={props.label}\n        className={`form-control ${Invalid}`}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />\n        {props.invalid && props.shouldValidate && props.touched? <span className=\"error-message\"><small>{props.errorMsg}</small></span>: null}</div>;\n      break;\n    case ('textarea'):\n      inputElement = <textarea\n        className={`form-control ${Invalid}`}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n      break;\n    case ('select'):\n      inputElement = (\n        <select\n          className={`form-control ${Invalid}`}\n          value={props.value}\n          onChange={props.changed}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = <input\n        className={`form-control ${Invalid}`}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n  }\n\n  return (\n    <div className={'Input'}>\n      <label className=\"form-label\" htmlFor={props.label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n\n};\n\nexport default input;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\nimport { updateObject, checkValidity } from '../../../shared/utility';\n\nconst ContactData = props => {\n  const [orderForm, setOrderForm] = useState({\n    name: {\n      elementType: 'input',\n      label: 'Name',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your Name'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      errorMsg: 'Name is required.',\n      valid: false,\n      touched: false\n    },\n    email: {\n      elementType: 'input',\n      label: 'E-mail',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'Your E-Mail'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      errorMsg: 'Please Check Email pattern.',\n      touched: false\n    },\n    country: {\n      elementType: 'input',\n      label: 'Country',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Country'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      errorMsg: 'Country is required.',\n      valid: false,\n      touched: false\n    },\n    street: {\n      elementType: 'input',\n      label: 'Address',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Street'\n      },\n      value: '',\n      validation: {\n        required: true\n      },\n      errorMsg: 'Street is required.',\n      valid: false,\n      touched: false\n    },\n    zipCode: {\n      elementType: 'input',\n      label: 'ZIP Code',\n      elementConfig: {\n        type: 'text',\n        placeholder: 'ZIP Code. ex: 50012'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 5,\n        maxLength: 5,\n        isNumeric: true\n      },\n      errorMsg: 'ZIP Code is required. Must Enter 5 numbers',\n      valid: false,\n      touched: false\n    },\n    deliveryMethod: {\n      elementType: 'select',\n      label: 'Delivery Method',\n      elementConfig: {\n        options: [\n          { value: 'fastest', displayValue: 'Fastest' },\n          { value: 'cheapest', displayValue: 'Cheapest' }\n        ]\n      },\n      value: 'fastest',\n      validation: {},\n      valid: true\n    }\n  });\n  const [formIsValid, setFormIsValid] = useState(false)\n\n  const ings = useSelector(state => state.burgerBuilder.ingredients);\n  const price = useSelector(state => state.burgerBuilder.totalPrice);\n  const loading = useSelector(state => state.order.loading);\n  const token = useSelector(state => state.auth.token);\n  const userId = useSelector(state => state.auth.userId);\n  const dispatch = useDispatch();\n  const onOrderBurger = (orderData, token) => dispatch(actions.purchaseBurger(orderData, token));\n\n  const orderHandler = event => {\n    event.preventDefault();\n\n    const formData = {};\n    for (let formElementIdentifier in orderForm) {\n      formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\n    }\n    const order = {\n      date: new Date().getTime(),\n      ingredients: ings,\n      price: price,\n      orderData: formData,\n      userId: userId\n    };\n\n    onOrderBurger(order, token);\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(orderForm[inputIdentifier], {\n      value: event.target.value,\n      valid: checkValidity(\n        event.target.value,\n        orderForm[inputIdentifier].validation\n      ),\n      touched: true\n    });\n    const updatedOrderForm = updateObject(orderForm, {\n      [inputIdentifier]: updatedFormElement\n    });\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n    setOrderForm(updatedOrderForm);\n    setFormIsValid(formIsValid);\n  };\n\n  const formElementsArray = [];\n  for (let key in orderForm) {\n    formElementsArray.push({\n      id: key,\n      config: orderForm[key]\n    });\n  }\n  let form = (\n    <form onSubmit={orderHandler}>\n      {formElementsArray.map(formElement => (\n        <Input\n          key={formElement.id}\n          label={formElement.config.label}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          errorMsg={formElement.config.errorMsg}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed={event => inputChangedHandler(event, formElement.id)}\n        />\n      ))}\n      <Button btnType=\"Success\" disabled={!formIsValid}>\n        ORDER\n      </Button>\n    </form>\n  );\n  if (loading) {\n    form = <Spinner />;\n  }\n  return (\n    <div className={'ContactData'}>\n      <div className=\"wrapper\">\n        <h2 className=\"title\">Enter your Contact Data</h2>\n        {form}\n      </div>\n    </div>\n  );\n};\n\nexport default withErrorHandler(ContactData, axios)\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Checkout.css';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nconst checkout = props => {\n  const checkoutCancelledHandler = () => {\n    props.history.goBack();\n  };\n\n  const checkoutContinuedHandler = () => {\n    props.history.replace('/checkout/contact-data');\n  };\n\n  let summary = <Redirect to=\"/\" />;\n  if (props.ings) {\n    const purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null;\n    summary = (\n      <div className=\"checkout\">\n        {purchasedRedirect}\n        <CheckoutSummary\n          ingredients={props.ings}\n          checkoutCancelled={checkoutCancelledHandler}\n          checkoutContinued={checkoutContinuedHandler}\n        />\n        <Route\n          path={props.match.path + '/contact-data'}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n  return summary;\n};\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(checkout);\n","import React from 'react';\n\nimport './Order.css';\n\nconst order = (props) => {\n  function convertTime(time) {\n    let datetime = new Date();\n    datetime.setTime(time);\n    const year = datetime.getFullYear();\n    const month = datetime.getMonth() + 1;\n    const date = datetime.getDate();\n    const hour = datetime.getHours();\n    const minute = datetime.getMinutes();\n    const second = datetime.getSeconds();\n    return year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minute + \":\" + second;\n  };\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push(\n      {\n        name: ingredientName,\n        amount: props.ingredients[ingredientName]\n      }\n    );\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return <span\n      style={{\n        textTransform: 'capitalize',\n        display: 'inline-block',\n        margin: '0 8px',\n        border: '1px solid #ccc',\n        padding: '5px',\n        borderRadius: '2px'\n      }}\n      key={ig.name}>{ig.name} ({ig.amount})</span>;\n  });\n  return (\n    <tr>\n      <th>{props.orderId}</th>\n      <td>{props.date? <p>{convertTime(props.date)} </p>: null} </td>\n      <td>{ingredientOutput}</td>\n      <td><strong> {Number.parseFloat(props.price).toFixed(2)}</strong></td>\n    </tr>\n  )\n};\n\nexport default order;","import React, { useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport './Orders.css';\n\nconst Orders = () => {\n  const dispatch = useDispatch();\n\n  const orders = useSelector(state => state.order.orders);\n  const loading = useSelector(state => state.order.loading);\n  const token = useSelector(state => state.auth.token); \n  const userId = useSelector(state => state.auth.userId);\n\n  const onFetchOrders = useCallback(\n    (token, userId) => dispatch(actions.fetchOrders(token, userId)),\n    [dispatch]\n  );\n  \n  useEffect(() => {\n    console.log('fetch');\n    onFetchOrders(token, userId);\n  }, [onFetchOrders, token, userId]);\n\n  let ordersComponent = <Spinner />;\n  if (!loading) {\n    ordersComponent = <div className=\"table-responsive\">\n      <h2 className=\"title\">My Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>OrderID</th>\n            <th>Date</th>\n            <th>Ingredients</th>\n            <th>Price (USD)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order, key) => (\n            <Order\n              key={key}\n              orderId={order.orderId}\n              date={order.date}\n              ingredients={order.ingredients}\n              price={order.price}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  }\n  return <div class=\"order-table\">\n    {ordersComponent}\n  </div>;\n};\n\nexport default withErrorHandler(Orders, axios);","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport './Auth.css';\nimport * as actions from '../../store/actions/index';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nconst Auth = props => {\n  const [isSignup, setIsSignup] = useState(true);\n  const [authForm, setAuthForm] = useState({\n    email: {\n      elementType: 'input',\n      label: 'E-mail',\n      elementConfig: {\n        type: 'email',\n        placeholder: 'Mail Address'\n      },\n      value: '',\n      validation: {\n        required: true,\n        isEmail: true\n      },\n      valid: false,\n      touched: false\n    },\n    password: {\n      elementType: 'input',\n      label: 'Password',\n      elementConfig: {\n        type: 'password',\n        placeholder: 'Password'\n      },\n      value: '',\n      validation: {\n        required: true,\n        minLength: 6\n      },\n      valid: false,\n      touched: false\n    }\n  });\n  // const price = useSelector(state => state.burgerBuilder.totalPrice);\n  const loading = useSelector(state => state.auth.loading);\n  const error = useSelector(state => state.auth.error);\n  const isAuthenticated = useSelector(state => state.auth.token !== null);\n  const buildingBurger = useSelector(state => state.burgerBuilder.building);\n  const authRedirectPath = useSelector(state => state.auth.authRedirectPath);\n\n  const dispatch = useDispatch();\n  // const onIngredientAdded = ingName => dispatch(actions.addIngredient(ingName));\n  const dispatchOnAuth =  (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup));\n  const dispatchOnSetAuthRedirectPath = dispatch => dispatch(actions.setAuthRedirectPath('/'));\n\n  useEffect(() => {\n    if (!buildingBurger && authRedirectPath !== '/') {\n      dispatchOnSetAuthRedirectPath();\n    }\n  });\n\n  const inputChangedHandler = (event, controlName) => {\n    const updatedControls = updateObject(authForm, {\n      [controlName]: updateObject(authForm[controlName], {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          authForm[controlName].validation\n        ),\n        touched: true\n      })\n    });\n    setAuthForm(updatedControls);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    dispatchOnAuth(authForm.email.value, authForm.password.value, isSignup);\n  };\n\n  const switchAuthModeHandler = () => {\n    setIsSignup(!isSignup);\n  };\n\n  const formElementsArray = [];\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key]\n    });\n  }\n\n  let form = formElementsArray.map(formElement => (\n    <Input\n      key={formElement.id}\n      label={formElement.config.label}\n      elementType={formElement.config.elementType}\n      elementConfig={formElement.config.elementConfig}\n      value={formElement.config.value}\n      invalid={!formElement.config.valid}\n      shouldValidate={formElement.config.validation}\n      touched={formElement.config.touched}\n      changed={event => inputChangedHandler(event, formElement.id)}\n    />\n  ));\n\n  if (loading) {\n    form = <Spinner />;\n  }\n\n  let errorMessage = null;\n\n  if (error) {\n    errorMessage = <p style={{\n      background: '#f7d2c0',\n      padding: '10px',\n      borderRadius: '4px',\n    }} className=\"error-message\">Error: {error.message}</p>;\n  }\n\n  let authRedirect = null;\n  if (isAuthenticated) {\n    authRedirect = <Redirect to={authRedirectPath} />;\n  }\n\n  return (\n    <div className={'Auth'}>\n      <div className=\"wrapper\">\n        <h2 className=\"title\"> {isSignup ? 'Sign Up' : 'Sign In'} </h2>\n        {authRedirect}\n        {errorMessage}\n        <form onSubmit={submitHandler}>\n          {form}\n          <Button btnType=\"Success\">SUBMIT</Button>\n        </form>\n        <Button clicked={switchAuthModeHandler} btnType=\"Danger\">\n          SWITCH TO {isSignup ? 'SIGNIN' : 'SIGNUP'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth\n","import React, { useEffect, Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.auth.token !== null);\n\n  useEffect(() => {\n    dispatch(actions.authCheckState())\n  })\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/\" component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/orders\" component={Orders} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </Layout>\n    </div>\n  );\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport './index.css';\nimport App from './App';\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename={ process.env.REACT_APP_PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\nregisterServiceWorker();"],"sourceRoot":""}